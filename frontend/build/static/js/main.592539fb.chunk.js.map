{"version":3,"sources":["contexts/ThemeContext.js","components/SiteLoader.js","helpers/responsiveFacilities.js","components/Alert.js","helpers/fetchApi.js","contexts/UserContext.js","pages/NoteGallery/Note.js","components/CloseOnOuterClick.js","helpers/InputErrorHandler.js","pages/NoteGallery/FocusedNote/ShareWindow.js","pages/NoteGallery/FocusedNote/TopPanel.js","pages/NoteGallery/FocusedNote/index.js","components/SlideAnimation.js","pages/NoteGallery/Menu/ThemeSwitch.js","components/InputField.js","pages/NoteGallery/Menu/Form.js","pages/NoteGallery/Menu/EncryptionSettings.js","pages/NoteGallery/Menu/PasswordSettings.js","pages/NoteGallery/Menu/index.js","pages/NoteGallery/PinForm.js","pages/NoteGallery/index.js","components/RadioField.js","pages/Auth/Forms.js","pages/Auth/index.js","App.js","index.js"],"names":["ThemeContext","createContext","darkTheme","type","fontColor","bgColor","uiColor","shadow","lightTheme","ThemeContextProvider","children","useState","theme","setTheme","isDarkTheme","setIsDarkTheme","useEffect","document","body","style","backgroundColor","Provider","value","Loader","styled","div","SiteLoader","useContext","className","getSize","width","window","innerWidth","AlertDiv","Alert","content","setContent","showAlert","setShowAlert","addEventListener","removeEventListener","transition","useTransition","from","opacity","enter","leave","item","API_URL","process","fetchApi","url","a","method","fetch","credentials","JSON","stringify","headers","cors","res","ok","json","data","error","UserContext","UserContextProvider","user","setUser","isLoading","setIsLoading","alertContent","setAlertContent","NoteDiv","DateSkeleton","ContentSkeleton","LoadingContent","Note","setNoteToFocus","updatedAt","date","Date","toLocaleDateString","onClick","CloseOnOuterClick","setSomething","valueToSet","node","useRef","handleClick","e","current","contains","target","ref","setValid","name","querySelector","classList","add","setError","el","textContent","remove","isFormUnfilled","fields","isUnfilled","field","ShareWindowDiv","User","p","Input","input","ShareWindow","note","setNotes","newRecipient","setNewRecipient","recipients","setRecipients","id","_id","shareNote","preventDefault","recipient","notes","map","unlinkNote","recipientToUnlink","title","size","onSubmit","onChange","placeholder","Icon","props","stroke","TopPanel","setSharedNotes","isSaved","setIsSaved","isEditing","setIsEditing","showShareWindow","setShowShareWindow","author","username","isShared","removeNote","filter","saveNote","saveChanges","IconArrowLeft","IconEdit","IconTrash","IconShare","IconUnlink","IconDeviceFloppy","handleSaveButtonClick","color","FocusedNoteWrapper","FocusedNoteWindow","FocusedNote","handleKeyUp","code","autoComplete","autoFocus","SlideAnimation","isVisible","start","end","position","Switch","ThemeDiv","ThemeSwitch","prev","InputFieldDiv","Label","label","InputField","text","htmlFor","spellCheck","StyledForm","form","Button","button","Form","handleSubmit","setShowForm","EncryptionSettings","showSetPinForm","setShowSetPinForm","showChangePinForm","setShowChangePinForm","pin","setPin","currentPin","setCurrentPin","newPin","setNewPin","encryption","then","showForm","currentPassword","setCurrentPassword","newPassword","setnewPassword","changePassword","MenuWrapper","MenuButton","MenuDiv","Menu","showMenu","setShowMenu","logout","console","y","padding","PasswordSettings","PinFormDiv","PinForm","setShowPinForm","getNotes","userNotes","sharedNotes","NoteGalleryDiv","Notes","getColumns","SectionHeader","NoteGallery","noteToFocus","range","Array","fill","showPinForm","length","Math","random","Checkbox","Content","RadioField","isChecked","setIsChecked","IconCheck","LoginForm","action","login","setLogin","password","setPassword","dontLogout","setDontLogout","x","SignUpForm","setUsername","repeatPassword","setRepeatPassword","TryForm","AuthPageDiv","ActionSwitch","Main","setAction","ViewHandler","Auth","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.592539fb.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nexport const ThemeContext = createContext(null)\r\n\r\nconst darkTheme = {\r\n    type: 'dark',\r\n    fontColor: '#fafafa',\r\n    bgColor: '#212121',\r\n    uiColor: '#424242',\r\n    shadow: '0 0 3px #616161'\r\n}\r\nconst lightTheme = {\r\n    type: 'light',\r\n    fontColor: '#424242',\r\n    bgColor: '#fafafa',\r\n    uiColor: '#eeeeee',\r\n    shadow: '0 0 10px -5px #212121'\r\n}\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n    const [theme, setTheme] = useState(lightTheme)\r\n    const [isDarkTheme, setIsDarkTheme] = useState(false);\r\n\r\n    useEffect(() => document.body.style.backgroundColor = theme.bgColor, [theme])\r\n    useEffect(() => setTheme(isDarkTheme ? darkTheme : lightTheme), [isDarkTheme])\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setIsDarkTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ThemeContextProvider;\r\n","import { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { ThemeContext } from '@contexts/ThemeContext';\n\nconst Loader = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    width: 20rem;\n    aspect-ratio: 1/1;\n    border-radius: 50%;\n\n    * {\n        border-radius: 50%;\n        background-color: ${({ theme }) => theme.bgColor};\n        border: 0.5rem solid transparent;\n        animation: rotate infinite linear;\n        animation-duration: 8s;\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n        box-sizing:border-box;\n    }\n\n    .inlineBorders {\n        border-inline-color: ${({ theme }) => theme.fontColor};\n    }\n\n    .blockBorders {\n        border-block-color: ${({ theme }) => theme.fontColor};\n    }\n\n    @keyframes rotate {\n        from { transform: rotate(0); }\n        to { transform: rotate(360deg); }\n    }   \n`\n\nconst SiteLoader = () => {\n    const { theme } = useContext(ThemeContext)\n\n    // I know it`s nonsense but it looks cool for me 🤷‍♂️\n    return (\n        <Loader theme={theme}>\n            <div className=\"blockBorders\">\n                <div className=\"inlineBorders\">\n                    <div className=\"blockBorders\">\n                        <div className=\"inlineBorders\">\n                            <div className=\"blockBorders\">\n                                <div className=\"inlineBorders\">\n                                    <div className=\"blockBorders\">\n                                        <div className=\"inlineBorders\">\n                                            <div className=\"blockBorders\">\n                                                <div className=\"inlineBorders\">\n                                                    <div className=\"blockBorders\">\n                                                        <div className=\"inlineBorders\">\n                                                            <div className=\"blockBorders\">\n                                                                <div className=\"inlineBorders\">\n                                                                    <div className=\"blockBorders\">\n                                                                        <div className=\"inlineBorders\">\n                                                                            <div className=\"blockBorders\">\n                                                                                <div className=\"inlineBorders\">\n                                                                                    <div className=\"blockBorders\">\n                                                                                        <div className=\"inlineBorders\"></div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Loader>\n    )\n}\n\nexport default SiteLoader;","export const getSize = () => {\n\n    const width = window.innerWidth\n\n    if (width > 1400) return '18px'\n    else if (width > 1200) return '17px'\n    else return '16px'\n\n}\n\nexport const getColumns = () => {\n\n    const width = window.innerWidth\n\n    if (width > 1500) return '1fr 1fr 1fr 1fr'\n    else if (width > 1000) return '1fr 1fr 1fr'\n    else return '1fr 1fr'\n}\n\n","import styled from \"styled-components\";\nimport { IconAlertCircle } from '@tabler/icons';\nimport { useContext, useEffect, useState } from \"react\";\nimport { useTransition, animated } from 'react-spring'\n\nimport { ThemeContext } from \"@contexts/ThemeContext\";\nimport { getSize } from '@helpers/responsiveFacilities'\n\nconst AlertDiv = styled.div`\n    position: absolute;\n    bottom: 20px;\n    right: 20px;\n    width: 300px;\n    aspect-ratio: 20/4;\n    background-color: #1e88e5 ;\n    z-index: 100;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    color: #fafafa;\n    box-shadow: ${({ theme }) => theme.shadow};\n    gap: 5px;\n    font-size: ${getSize()};\n`\n\nconst Alert = ({ content, setContent }) => {\n    const { theme } = useContext(ThemeContext)\n    const [showAlert, setShowAlert] = useState(false);\n\n    useEffect(() => {\n        document.addEventListener('click', () => setContent(''))\n        return () => document.removeEventListener('click', () => setContent(''))\n    })\n\n    useEffect(() => setShowAlert(content ? true : false), [content])\n\n    const transition = useTransition(showAlert, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    return (\n        <>\n            {transition((style, item) =>\n                item &&\n                <animated.div style={style}>\n                    <AlertDiv theme={theme}>\n                        <p>{content}</p> <IconAlertCircle />\n                    </AlertDiv>\n                </animated.div>\n            )}\n        </>\n\n    );\n}\n\nexport default Alert;\n","const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n\nconst fetchApi = async (url, body, method = `POST`) => {\n\n    try {\n        let res;\n\n        if (body) {\n            res = await fetch(API_URL + url, {\n                method: method,\n                credentials: `include`,\n                body: JSON.stringify(body),\n                headers: { 'Content-Type': 'application/json' },\n                cors: 'same-origin',\n            });\n        } else {\n            res = await fetch(API_URL + url, {\n                credentials: `include`,\n                cors: 'same-origin',\n            })\n        }\n\n        const ok = res.ok\n        const data = await res.json()\n\n        if (res.ok) return { content: data, ok }\n        else return { error: data, ok }\n    }\n    catch (err) {\n        return { ok: false, error: `Can't connect to the server` }\n    }\n}\nexport default fetchApi","import { createContext, useContext, useEffect, useState } from 'react'\n\nimport Loader from '@components/SiteLoader'\nimport Alert from '@components/Alert'\nimport fetchApi from '@helpers/fetchApi';\nimport { ThemeContext } from './ThemeContext';\n\nexport const UserContext = createContext(null)\n\n\nconst UserContextProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const { setIsDarkTheme } = useContext(ThemeContext)\n    const [alertContent, setAlertContent] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetchApi('/auth/verify')\n            if (res.ok) {\n                setUser(res.content)\n                setIsLoading(false)\n            }\n            else setAlertContent(res.error)\n        })()\n    }, [])\n\n    useEffect(() => user && setIsDarkTheme(user.theme === 'light' ? false : true), [user])\n\n    return (\n        <UserContext.Provider value={{ user, setUser }}>\n            <Alert content={alertContent} setContent={setAlertContent} />\n            {\n                isLoading\n                    ? <Loader />\n                    : <>{children}</>\n            }\n        </UserContext.Provider>\n    );\n}\n\nexport default UserContextProvider;\n","import { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport { getSize } from '@helpers/responsiveFacilities';\n\nconst NoteDiv = styled.div`\n    border-radius: 10px;\n    padding-block: calc(0.1 * ${getSize()});\n    padding-inline: calc(0.5 * ${getSize()});\n    max-height: 150px;\n    white-space: pre;\n    line-height: 1.7rem;\n    max-height: 8rem;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n    display: inline-block;\n    overflow: hidden !important;\n    text-overflow: ellipsis;\n    font-weight: 300;\n    color: inherit;\n    border: 5px solid ${({ theme }) => theme.uiColor};\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.type === 'light' && theme.shadow};\n\n    .date {\n        font-size: calc(0.8 * ${getSize});\n        margin: 0;\n        height: 10px;\n    } \n\n    .content {\n        font-size: calc(0.9* ${getSize()});\n        margin-top: ${getSize()};\n    }\n`\n\nconst DateSkeleton = styled.div`\n    height: calc(0.8 *  ${getSize()});\n    width: 70px;\n    display: inline-block;\n    border-radius: 10px;\n    position: relative;\n    overflow: hidden;\n    background-color: ${({ theme }) => theme.bgColor};\n`\n\nconst ContentSkeleton = styled.div`\n    height: calc(4 *  ${getSize()});\n    width: 100%;\n    border-radius: 10px;\n    margin-top: 5px;\n    position: relative;\n    overflow: hidden;\n    background-color: ${({ theme }) => theme.bgColor};\n`\n\nconst LoadingContent = styled.div`\n    position: absolute;\n    height: 10%;\n    left: -10%;\n    top: 0;\n    width: 100%;\n    opacity: 0.5;\n    filter: blur(30px);\n    transform: rotate(-10deg);\n    animation: loadAnimation 1s linear infinite;\n    background-color: ${({ theme }) => theme.fontColor};\n\n    @keyframes loadAnimation {\n        from {\n            top: -100%;\n        }\n        to {\n           top: 200%;\n        }\n    }\n`\n\nconst Note = ({ setNoteToFocus, data }) => {\n    const { theme } = useContext(ThemeContext)\n    const { updatedAt, content } = data\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        if (data !== 'loading') setIsLoading(false)\n    }, [])\n\n    const date = new Date(updatedAt).toLocaleDateString()\n\n\n    return (\n        <NoteDiv\n            theme={theme}\n            className={isLoading ? '' : 'clickable'}\n            onClick={() => !isLoading && setNoteToFocus(data)}\n        >\n\n            {isLoading\n                ? <>\n                    <DateSkeleton theme={theme} ><LoadingContent theme={theme} /></DateSkeleton>\n                    <ContentSkeleton theme={theme}><LoadingContent theme={theme} /></ContentSkeleton>\n                </>\n                : <>\n                    <div className=\"date\">{date}</div>\n                    <div className=\"content\">{content}</div>\n                </>\n            }\n\n        </NoteDiv>\n    );\n}\n\nexport default Note","import React, { useEffect, useRef } from \"react\"\n\nconst CloseOnOuterClick = ({ children, setSomething, valueToSet = false }) => {\n    const node = useRef(null)\n\n    const handleClick = e => {\n        if (!node.current) return\n\n        if (node.current.contains(e.target)) return\n        else setSomething(valueToSet)\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClick)\n        return () => document.removeEventListener('click', handleClick)\n    }, [valueToSet])\n\n    return <span ref={node}>{children}</span>\n}\n\nexport default CloseOnOuterClick;","export const setValid = name => document.querySelector(`.error.${name}`).classList.add('hide')\nexport const setError = (name, content) => {\n    const el = document.querySelector(`.error.${name}`)\n    el.textContent = content\n    el.classList.remove('hide')\n}\nexport const isFormUnfilled = fields => {\n    let isUnfilled = false\n\n    for (const field in fields) {\n        const content = fields[field]\n\n        if (!content) {\n            setError(field, `Oops, you have to fill this field`)\n            isUnfilled = true\n        }\n        else setValid(field)\n    }\n\n    return isUnfilled\n}","import { useContext, useState } from \"react\";\r\nimport { IconUnlink } from '@tabler/icons';\r\nimport styled from \"styled-components\";\r\n\r\nimport fetchApi from \"@helpers/fetchApi\";\r\nimport { ThemeContext } from \"@contexts/ThemeContext\";\r\nimport { setError, setValid } from '@helpers/InputErrorHandler'\r\n\r\nconst ShareWindowDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row; \r\n    align-items: center;    \r\n    gap: 5px;\r\n`\r\n\r\nconst User = styled.p`\r\n    background-color: ${({ theme }) => theme.fontColor};\r\n    color: ${({ theme }) => theme.bgColor};\r\n    padding: 3px 10px;\r\n    border-radius: 100px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n`\r\n\r\nconst Input = styled.input`\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    transition: 0.3s;\r\n    color: ${({ theme }) => theme.fontColor};\r\n`\r\n\r\nconst ShareWindow = ({ note, setNotes }) => {\r\n    const { theme } = useContext(ThemeContext)\r\n    const [newRecipient, setNewRecipient] = useState('');\r\n    const [recipients, setRecipients] = useState(note.recipients);\r\n\r\n    const { _id: id, content } = note\r\n\r\n    const shareNote = async e => {\r\n        e.preventDefault()\r\n\r\n        const res = await fetchApi('/note/share', { id, content, recipient: newRecipient }, 'PATCH')\r\n\r\n        if (res.ok) {\r\n            setRecipients(res.content)\r\n            setNotes(notes => {\r\n                return notes.map(el => {\r\n                    if (el._id === id) return note\r\n                    else return el\r\n                })\r\n            })\r\n            setValid('res')\r\n        }\r\n        else setError('res', res.error)\r\n        setNewRecipient('')\r\n    }\r\n\r\n    const unlinkNote = async recipientToUnlink => {\r\n        const res = await fetchApi('/note/unlink', { recipientToUnlink, id, content }, 'PATCH')\r\n\r\n        if (res.ok) {\r\n            setRecipients(res.content)\r\n            setNotes(notes => {\r\n                return notes.map(note => {\r\n                    if (note._id === id) return note\r\n                    else return note\r\n                })\r\n            })\r\n            setValid('res')\r\n        }\r\n        else setError('res', res.error)\r\n    }\r\n\r\n    return (\r\n        <ShareWindowDiv theme={theme}>\r\n\r\n            <p>Users with access: </p>\r\n\r\n            {recipients.map(user => (\r\n                <User\r\n                    key={user}\r\n                    className='clickable'\r\n                    title={`unlink ${user}`}\r\n                    theme={theme}\r\n                    onClick={e => unlinkNote(user)}\r\n                >\r\n                    {user} <IconUnlink size=\"15\" />\r\n                </User>\r\n            ))}\r\n\r\n            <form onSubmit={e => shareNote(e)}>\r\n                <Input value={newRecipient} onChange={e => setNewRecipient(e.target.value)} theme={theme} type=\"text\" placeholder='share to...' />\r\n                <div className=\"error res\"></div>\r\n            </form>\r\n\r\n        </ShareWindowDiv>\r\n    );\r\n}\r\n\r\nexport default ShareWindow;","import {\r\n    IconEdit,\r\n    IconTrash,\r\n    IconArrowLeft,\r\n    IconDeviceFloppy,\r\n    IconUnlink,\r\n    IconShare,\r\n} from \"@tabler/icons\"\r\n\r\nimport fetchApi from \"@helpers/fetchApi\"\r\nimport ShareWindow from \"./ShareWindow\"\r\nimport { useContext, useState } from \"react\"\r\nimport { UserContext } from \"@contexts/UserContext\"\r\n// import { ThemeContext } from '@contexts/ThemeContext';\r\n\r\nconst TopPanel = ({\r\n    note,\r\n    content,\r\n    setSharedNotes,\r\n    setNoteToFocus,\r\n    setAlertContent,\r\n    setNotes,\r\n    isSaved,\r\n    setIsSaved,\r\n    isEditing,\r\n    setIsEditing,\r\n}) => {\r\n    const [showShareWindow, setShowShareWindow] = useState(false)\r\n    const { user } = useContext(UserContext)\r\n    const [isShared] = useState(note.author !== user.username)\r\n    // const { theme } = useContext(ThemeContext)\r\n\r\n    const date = note.updatedAt\r\n        ? new Date(note.updatedAt).toLocaleDateString()\r\n        : new Date().toLocaleDateString()\r\n\r\n    const removeNote = async () => {\r\n        const res = await fetchApi(\"/note\", { id: note._id }, \"DELETE\")\r\n\r\n        if (res.ok) {\r\n            setNotes((notes) => notes.filter((el) => el._id !== note._id))\r\n            setNoteToFocus(null)\r\n        } else setAlertContent(res.error)\r\n    }\r\n\r\n    const saveNote = async () => {\r\n        const res = await fetchApi(\"/note\", { content }, \"POST\")\r\n\r\n        if (res.ok) {\r\n            setNotes((notes) =>\r\n                notes ? [...notes, res.content] : [res.content]\r\n            )\r\n            setIsSaved(true)\r\n        } else setAlertContent(res.error)\r\n    }\r\n\r\n    const saveChanges = async () => {\r\n        const res = await fetchApi(\"/note\", { content, id: note._id }, \"PATCH\")\r\n\r\n        if (res.ok) {\r\n            setIsSaved(true)\r\n            setNotes((notes) =>\r\n                notes.map((el) => {\r\n                    if (el._id === note._id) el.content = content\r\n                    return el\r\n                })\r\n            )\r\n        } else setAlertContent(res.error)\r\n    }\r\n\r\n    const unlinkNote = async () => {\r\n        const res = await fetchApi(\r\n            \"note/unlink\",\r\n            { id: note._id, content: note.content },\r\n            \"PATCH\"\r\n        )\r\n\r\n        if (res.ok) {\r\n            setSharedNotes((notes) => notes.filter((el) => el._id !== note._id))\r\n            setNoteToFocus(null)\r\n        } else setAlertContent(res.error)\r\n    }\r\n\r\n    const handleSaveButtonClick = () => {\r\n        if (!content || isSaved) return\r\n        else if (note === \"new\") saveNote()\r\n        else if (isEditing) saveChanges()\r\n        else return\r\n    }\r\n\r\n    return (\r\n        <div className=\"top-panel\">\r\n            <div className=\"upper-row\">\r\n                <div className=\"buttons\">\r\n                    <Icon\r\n                        title=\"Close\"\r\n                        Icon={IconArrowLeft}\r\n                        handleClick={() => setNoteToFocus(null)}\r\n                    />\r\n\r\n                    {note !== \"new\" && !isShared && !isEditing && (\r\n                        <>\r\n                            <Icon\r\n                                title=\"Edit note\"\r\n                                Icon={IconEdit}\r\n                                handleClick={() => setIsEditing(true)}\r\n                            />\r\n                            <Icon\r\n                                title=\"Remove note\"\r\n                                Icon={IconTrash}\r\n                                handleClick={() => removeNote()}\r\n                            />\r\n                            <Icon\r\n                                title=\"Share note\"\r\n                                Icon={IconShare}\r\n                                handleClick={() =>\r\n                                    setShowShareWindow(!showShareWindow)\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n\r\n                    {isShared && note !== \"new\" && (\r\n                        <>\r\n                            <Icon\r\n                                title=\"Unlink note\"\r\n                                Icon={IconUnlink}\r\n                                handleClick={() => unlinkNote()}\r\n                            />\r\n                            <p title=\"author\">{note.author}</p>\r\n                        </>\r\n                    )}\r\n\r\n                    {isSaved !== null && (\r\n                        <Icon\r\n                            Icon={IconDeviceFloppy}\r\n                            handleClick={() => handleSaveButtonClick()}\r\n                            color={isSaved ? \"#4caf50\" : \"#f44336\"}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"date\">{date}</div>\r\n            </div>\r\n\r\n            {showShareWindow && note.author === user.username && (\r\n                <ShareWindow note={note} setNotes={setNotes} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Icon = ({ handleClick, Icon, title, ...props }) => (\r\n    <div title={title}>\r\n        <Icon\r\n            onClick={handleClick}\r\n            size=\"30px\"\r\n            stroke=\"1\"\r\n            className=\"clickable\"\r\n            {...props}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default TopPanel\r\n","import styled from \"styled-components\"\nimport { useContext, useEffect, useState } from \"react\"\n\nimport { getSize } from \"@helpers/responsiveFacilities\"\nimport { ThemeContext } from \"@contexts/ThemeContext\"\nimport CloseOnOuterClick from \"@components/CloseOnOuterClick.js\"\nimport Alert from \"@components/Alert\"\nimport TopPanel from \"./TopPanel\"\n\nconst FocusedNoteWrapper = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: grid;\n    place-items: center;\n    z-index: 10;\n    font-size: ${getSize()};\n`\n\nconst FocusedNoteWindow = styled.div`\n    width: 55vw;\n    height: 60vh;\n    z-index: 10;\n    border-radius: 10px;\n    margin-inline: auto;\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    color: ${({ theme }) => theme.fontColor};\n    transition: 0.1s;\n    overflow: hidden;\n\n    @media screen and (max-width: 1000px) {\n        width: 95vw;\n    }\n\n    .top-panel {\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        box-shadow: ${({ theme }) => theme.shadow};\n        gap: 10px;\n\n        .upper-row {\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n        }\n\n        .buttons {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            font-size: 20px;\n            gap: 10px;\n        }\n    }\n\n    .content {\n        height: calc(100% - 50px);\n        padding-inline: 15px;\n        font-weight: 300;\n        padding-block: ${getSize()};\n        font-size: ${getSize()};\n        white-space: pre;\n        overflow-y: scroll;\n        overflow-x: hidden;\n    }\n\n    textarea {\n        background-color: transparent;\n        width: calc(100% - 20px);\n        margin-inline: 10px;\n        border-radius: 10px;\n        height: calc(100% - 60px);\n        outline: none;\n        padding: 10px;\n        font-weight: 300;\n        font-size: ${getSize()};\n        border: none;\n\n        color: ${({ theme }) => theme.fontColor};\n    }\n`\n\nconst FocusedNote = ({ note, setNoteToFocus, setNotes, setSharedNotes }) => {\n    const [content, setContent] = useState(note.content || \"\")\n    const [alertContent, setAlertContent] = useState(\"\")\n    const { theme } = useContext(ThemeContext)\n\n    const [isSaved, setIsSaved] = useState(null)\n    const [isEditing, setIsEditing] = useState(false)\n\n    const handleKeyUp = e => {\n        const key = e.code\n        if (key === 'Escape') setNoteToFocus(null)\n    }\n\n    useEffect(() => {\n        document.addEventListener('keyup', handleKeyUp)\n        return () => document.removeEventListener('keyup', handleKeyUp)\n    }, [isEditing])\n\n    return (\n        <FocusedNoteWrapper>\n            <Alert content={alertContent} setContent={setAlertContent} />\n\n            <CloseOnOuterClick setSomething={setNoteToFocus} valueToSet={isEditing && note}>\n                <FocusedNoteWindow theme={theme}>\n                    <TopPanel\n                        note={note}\n                        isSaved={isSaved}\n                        setNoteToFocus={setNoteToFocus}\n                        setAlertContent={setAlertContent}\n                        content={content}\n                        setNotes={setNotes}\n                        setIsSaved={setIsSaved}\n                        setSharedNotes={setSharedNotes}\n                        isEditing={isEditing}\n                        setIsEditing={setIsEditing}\n                    />\n\n                    {note === \"new\" || isEditing ? (\n                        <textarea\n                            autoComplete=\"off\"\n                            autoFocus=\"on\"\n                            value={content}\n                            onChange={(e) => {\n                                setContent(e.target.value)\n                                setIsSaved(false)\n                            }}\n                        />\n                    ) : (\n                        <div className=\"content\">{note.content}</div>\n                    )}\n                </FocusedNoteWindow>\n            </CloseOnOuterClick>\n        </FocusedNoteWrapper>\n    )\n}\n\nexport default FocusedNote\n","import { useTransition, animated } from 'react-spring'\n\nconst SlideAnimation = ({ isVisible, children, start, end }) => {\n    const transition = useTransition(isVisible, {\n        from: { ...start, opacity: 0, position: 'absolute', },\n        enter: { ...end, opacity: 1, position: 'static', },\n        leave: { ...start, opacity: 0, position: 'absolute', },\n    })\n\n    return (\n        <>\n            {transition((style, item) =>\n                item &&\n                <animated.div style={style}>\n                    {children}\n                </animated.div>\n            )}\n        </>\n    );\n}\n\nexport default SlideAnimation;","import { useContext, useState } from 'react'\nimport styled from \"styled-components\";\nimport { IconMoonStars, IconBrightness2, } from '@tabler/icons';\n\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport { getSize } from \"@helpers/responsiveFacilities\";\nimport fetchApi from '@helpers/fetchApi';\nimport Alert from '@components/Alert';\n\nconst Switch = styled.div`\n    border-radius: 9999px;\n    height: calc(1.5 * ${getSize()});\n    aspect-ratio: 2/1;\n    position: relative;\n    transition: 0.3s;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    box-sizing: content-box;\n    cursor: pointer;    \n\n\n    &::after {\n        content: '';\n        width: calc(1.5 * ${getSize()});\n        aspect-ratio: 1/1;\n        border-radius: 50%;\n        transition: 0.3s;\n        display: inline-block;\n        \n        transform: ${({ theme }) => theme.type === 'light' ? 'translateX(100%)' : ''};\n\n        background-color: ${({ theme }) => theme.fontColor};\n    }\n        \n    border: 3px solid ${({ theme }) => theme.bgColor};\n    background-color: ${({ theme }) => theme.bgColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst ThemeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    gap: 0 20px;\n    margin-block: 10px;\n\n    span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 5px;\n    }\n`\n\nconst ThemeSwitch = () => {\n    const { theme, setIsDarkTheme } = useContext(ThemeContext)\n    const [alertContent, setAlertContent] = useState('');\n\n    const handleClick = async () => {\n        const res = await fetchApi('/settings/theme', {}, 'PATCH')\n        if (res.ok) setIsDarkTheme(prev => !prev)\n        else setAlertContent(res.error)\n    }\n\n    return (\n        <>\n            <Alert content={alertContent} setContent={setAlertContent} />\n            <ThemeDiv>\n\n                <p>Theme:</p>\n\n                <span>\n                    <IconMoonStars />\n                    <Switch theme={theme} onClick={() => handleClick()} />\n                    <IconBrightness2 />\n                </span>\n\n            </ThemeDiv>\n        </>\n    );\n}\n\nexport default ThemeSwitch;","import { useContext } from 'react';\nimport styled from 'styled-components'\nimport { ThemeContext } from '@contexts/ThemeContext';\n\nconst InputFieldDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    text-align: left;\n`\n\nconst Label = styled.label`\n        margin-bottom: 5px;\n        font-size: 1.2rem;\n`\n\nconst Input = styled.input`\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        padding: 10px;\n        font-size: 1em;\n\n        color: inherit;\n        background-color: ${({ theme }) => theme.bgColor};\n        box-shadow: ${({ theme }) => theme.shadow}\n`\n\nconst InputField = ({ name, text, type = 'text', content, setContent, ...props }) => {\n    const { theme } = useContext(ThemeContext)\n\n    return (\n        <InputFieldDiv className='input-field'>\n            <Label htmlFor={name}>{text}</Label>\n            <Input\n                theme={theme}\n                type={type}\n                id={name}\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                spellCheck='off'\n                autoComplete='off'\n                {...props}\n            />\n            <div className={`${name} error hide`} />\n        </InputFieldDiv>\n    );\n}\n\nexport default InputField","import styled from \"styled-components\";\nimport { useContext } from \"react\";\n\nimport { getSize } from \"@helpers/responsiveFacilities\";\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport CloseOnOuterClick from \"@components/CloseOnOuterClick\";\n\nconst StyledForm = styled.form`\n    width: 70%;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`\n\nconst Button = styled.button`\n    width: 50%;\n    background-color: #3f51b5;\n    color: #fafafa;\n    padding-block: 10px;\n    aspect-ratio: 20/3;\n    border: none;\n    outline: none;\n    margin-top: 10px;\n    margin-bottom: 5px;\n    font-size: calc(0.9 * ${getSize()});\n    box-shadow: ${({ theme }) => theme.shadow}\n`\n\nconst Form = ({ children, handleSubmit, setShowForm }) => {\n    const { theme } = useContext(ThemeContext)\n\n    return (\n        <CloseOnOuterClick setSomething={setShowForm}>\n            <StyledForm onSubmit={e => handleSubmit(e)} >\n                {children}\n                <Button className='clickable' theme={theme}>Confirm</Button>\n                <div className=\"res error hide\"></div>\n            </StyledForm>\n        </CloseOnOuterClick>\n    );\n}\n\nexport default Form;","import { useContext, useState } from 'react'\nimport { IconLock } from '@tabler/icons';\nimport styled from \"styled-components\";\n\nimport { isFormUnfilled, setError } from '@helpers/InputErrorHandler'\nimport { getSize } from \"@helpers/responsiveFacilities\";\nimport fetchApi from '@helpers/fetchApi';\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport { UserContext } from '@contexts/UserContext'\nimport InputField from '@components/InputField'\nimport Form from './Form';\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst EncryptionSettings = () => {\n    const { theme } = useContext(ThemeContext)\n    const { user, setUser } = useContext(UserContext)\n    const [showSetPinForm, setShowSetPinForm] = useState(false);\n    const [showChangePinForm, setShowChangePinForm] = useState(false);\n\n    const [pin, setPin] = useState('');\n\n    const [currentPin, setCurrentPin] = useState('');\n    const [newPin, setNewPin] = useState('');\n\n    const startEncryption = e => {\n        e.preventDefault()\n        if (isFormUnfilled({ pin })) return\n\n        fetchApi('/settings/start-encryption', { pin }, 'PATCH')\n            .then(res => {\n                if (res.ok) {\n                    setUser(user => {\n                        user.encryption = true\n                        return user\n                    })\n                    setShowSetPinForm(false)\n                }\n                else setError('pin', res.error)\n            })\n    }\n\n    const changePin = e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ currentPin, newPin })) return\n\n        fetchApi('/settings/change-pin', { currentPin, newPin }, 'PATCH')\n            .then(res => {\n                if (res.ok) setShowChangePinForm(false)\n                else setError('res', res.error)\n            })\n    }\n\n    return (\n        <>\n            <Button\n                color=\"#03a9f4\"\n                theme={theme}\n                className='clickable'\n                onClick={() => user.encryption ? setShowChangePinForm(value => !value) : setShowSetPinForm(value => !value)}\n            >\n                {user.encryption ? 'Change PIN' : 'Turn on encryption'} <IconLock />\n            </Button>\n\n            {showSetPinForm &&\n                <Form setShowForm={setShowSetPinForm} handleSubmit={startEncryption}>\n                    <InputField name='pin' text='PIN to encrypt files' type='password' content={pin} setContent={setPin} />\n                </Form>\n            }\n\n            {showChangePinForm &&\n                <Form setShowForm={setShowChangePinForm} handleSubmit={changePin}>\n                    <InputField name='currentPin' text='Current PIN' type='password' content={currentPin} setContent={setCurrentPin} />\n                    <InputField name='newPin' text='New PIN' type='password' content={newPin} setContent={setNewPin} />\n                </Form>\n            }\n\n        </>\n    );\n}\n\nexport default EncryptionSettings;","import { IconLock } from '@tabler/icons';\nimport { useContext, useState } from 'react'\nimport styled from \"styled-components\";\n\nimport { isFormUnfilled, setError } from '@helpers/InputErrorHandler'\nimport { getSize } from \"@helpers/responsiveFacilities\";\nimport fetchApi from '@helpers/fetchApi';\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport InputField from '@components/InputField'\nimport Form from './Form';\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst EncryptionSettings = () => {\n    const { theme } = useContext(ThemeContext)\n\n    const [showForm, setShowForm] = useState(false);\n\n    const [currentPassword, setCurrentPassword] = useState('');\n    const [newPassword, setnewPassword] = useState('');\n\n    const changePassword = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ currentPassword, newPassword })) return\n\n        const res = await fetchApi('/settings/change-password', { currentPassword, newPassword }, 'PATCH')\n        if (res.ok) setShowForm(false)\n        else setError('res', res.error)\n    }\n\n    return (\n        <>\n            <Button\n                color=\"#03a9f4\"\n                theme={theme}\n                className='clickable'\n                onClick={() => setShowForm(!showForm)}\n            >\n                Change password <IconLock />\n            </Button>\n\n\n            {showForm &&\n                <Form setShowForm={setShowForm} handleSubmit={changePassword}>\n                    <InputField name='currentPassword' text='Current password' type='password' content={currentPassword} setContent={setCurrentPassword} />\n                    <InputField name='newPassword' text='New password' type='password' content={newPassword} setContent={setnewPassword} />\n                </Form>\n            }\n\n        </>\n    );\n}\n\nexport default EncryptionSettings;","import { useContext, useState } from 'react'\nimport styled from \"styled-components\";\nimport { IconGridDots } from '@tabler/icons';\n\nimport CloseOnOuterClick from \"@components/CloseOnOuterClick\";\nimport SlideAnimation from \"@components/SlideAnimation\";\nimport { ThemeContext } from \"@contexts/ThemeContext\";\nimport { UserContext } from '@contexts/UserContext'\nimport { getSize } from \"@helpers/responsiveFacilities\";\nimport fetchApi from \"@helpers/fetchApi\";\nimport ThemeSwitch from \"./ThemeSwitch\";\nimport EncryptionSettings from \"./EncryptionSettings\";\nimport PasswordSettings from './PasswordSettings'\n\nconst MenuWrapper = styled.div`\n    position: fixed;\n    left: 20px;\n    bottom:  20px;\n`\n\nconst MenuButton = styled.button`\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    border: none;\n    outline: none;\n    border-radius: 50%;\n    width: 50px;\n    aspect-ratio: 1/1;\n    margin-top: 15px;\n`\n\nconst MenuDiv = styled.div`\n    width: 300px;\n    border-radius: 20px;\n    font-weight: 300;\n    text-align: center;\n    overflow: hidden;\n\n    @media screen and (max-width: 450px) {\n        width: 90vw;\n    }\n\n    h3 {\n        font-size: calc(1.4 * ${getSize()})\n    }\n\n    p {\n        font-size: ${getSize()};\n        font-weight: 500;\n    }\n\n    background-color: ${({ theme }) => theme.uiColor};\n    color: ${({ theme }) => theme.fontColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst User = styled.div`\n    width: 100%;\n    box-shadow: ${({ theme }) => theme.shadow};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 8px;\n\n    p {\n        font-size: 23px !important;\n        font-weight: 300;\n    }\n`\n\nconst Menu = () => {\n    const { theme } = useContext(ThemeContext)\n    const { setUser, user } = useContext(UserContext)\n    const [showMenu, setShowMenu] = useState(false);\n\n    const logout = async () => {\n        const res = await fetchApi('/user/logout')\n\n        if (res.ok) setUser(null)\n        else console.error(res.error)\n    }\n\n    return (\n        <MenuWrapper>\n\n            <SlideAnimation isVisible={showMenu} start={{ y: 200 }} end={{ y: 0 }}>\n                <CloseOnOuterClick setSomething={setShowMenu}>\n                    <MenuDiv theme={theme}>\n\n                        <User theme={theme}>\n                            <p>{user.username}</p>\n                        </User>\n\n                        <div style={{ padding: '10px 20px' }}>\n\n\n                            <ThemeSwitch />\n\n                            <PasswordSettings />\n                            <EncryptionSettings />\n\n                            <Button onClick={() => logout()} color='#f44336' theme={theme} className='clickable'>\n                                Logout\n                            </Button>\n                        </div>\n\n                    </MenuDiv>\n                </CloseOnOuterClick>\n            </SlideAnimation>\n\n            <MenuButton theme={theme} onClick={() => setShowMenu(!showMenu)} className='clickable'>\n                <IconGridDots color={theme.fontColor} size='30px' />\n            </MenuButton>\n\n        </MenuWrapper>\n    );\n}\n\nexport default Menu;","import { useContext, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport InputField from '@components/InputField';\nimport fetchApi from '@helpers/fetchApi';\nimport { isFormUnfilled, setError } from '@helpers/InputErrorHandler';\n\nconst PinFormDiv = styled.div`\n    z-index: 10;\n    border-radius: 10px;\n    margin-inline: auto;\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    color: ${({ theme }) => theme.fontColor};\n    transition: 0.1s;\n    overflow: hidden;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    width: 400px;\n    padding: 20px 40px;\n    text-align: center;\n\n    @media screen and (max-width: 700px) {\n        width: 95vw;\n    }\n\n    h2 {\n        font-weight: 300;\n    }\n`\n\nconst Button = styled.button`\n    width: 70%;\n    aspect-ratio: 20/3;\n    background-color: #03a9f4;\n    color: #fafafa;\n    box-shadow: ${({ theme }) => theme.shadow};\n    outline: none;\n    border:none;\n    margin-top: 30px;\n    padding-block: 10px;\n`\n\nconst PinForm = ({ setNotes, setSharedNotes, setShowPinForm }) => {\n    const { theme } = useContext(ThemeContext)\n    const [pin, setPin] = useState('');\n\n    const getNotes = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ pin })) return\n\n        const res = await fetchApi('/user/notes', { pin })\n        if (res.ok) {\n            setNotes(res.content.userNotes)\n            setSharedNotes(res.content.sharedNotes)\n            setShowPinForm(false)\n        } else setError('pin', res.error)\n\n    }\n\n    return (\n        <PinFormDiv theme={theme}>\n            <h2>Enter your PIN</h2>\n            <form onSubmit={e => getNotes(e)}>\n\n                <InputField name='pin' type='password' content={pin} setContent={setPin} autoFocus={true} />\n\n                <Button className='clickable'> Decrypt data </Button>\n            </form>\n        </PinFormDiv>\n    );\n}\n\nexport default PinForm","import { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { IconPlus } from '@tabler/icons';\n\nimport { ThemeContext } from '@contexts/ThemeContext';\nimport { UserContext } from '@contexts/UserContext';\nimport fetchApi from '@helpers/fetchApi';\nimport Note from './Note'\nimport FocusedNote from './FocusedNote'\nimport Menu from './Menu/';\nimport PinForm from './PinForm'\nimport { getColumns } from '@helpers/responsiveFacilities';\nimport Alert from '@components/Alert';\n\nconst NoteGalleryDiv = styled.div`\n    padding: 0 10px;\n    transition: 0.2s;\n    color: ${({ theme }) => theme.fontColor};\n`\n\nconst Notes = styled.div`\n    display: grid;\n    grid-template-columns: ${getColumns()};\n    gap: 20px;\n    padding-top: 15px;\n\n    p {\n        font-size: 20px;\n    }\n`\nconst SectionHeader = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    text-align: left;\n    border-bottom: 2px solid ${({ theme }) => theme.fontColor};\n    opacity: 0.7;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    p {\n    font-weight: 500;\n    font-size: 25px;\n    }\n`\n\nconst NoteGallery = () => {\n    const { theme } = useContext(ThemeContext)\n    const { user } = useContext(UserContext)\n    const [noteToFocus, setNoteToFocus] = useState(null);\n\n    const range = new Array(8).fill('loading')\n    const [notes, setNotes] = useState(range);\n    const [sharedNotes, setSharedNotes] = useState([]);\n\n    const [showPinForm, setShowPinForm] = useState(user.encryption);\n    const [alertContent, setAlertContent] = useState('');\n\n    useEffect(() => {\n        if (user.encryption) return\n\n        (async () => {\n            const res = await fetchApi('/user/notes', {})\n            if (res.ok) setNotes(res.content.userNotes)\n            else setAlertContent(res.error)\n        })()\n\n    }, [])\n\n\n    return (\n        <>\n            {showPinForm && <PinForm setNotes={setNotes} setSharedNotes={setSharedNotes} setShowPinForm={setShowPinForm} />}\n            {noteToFocus && <FocusedNote setNoteToFocus={setNoteToFocus} note={noteToFocus} setNotes={setNotes} setSharedNotes={setSharedNotes} />}\n            <Alert content={alertContent} setContent={setAlertContent} />\n\n            <NoteGalleryDiv theme={theme} style={{ filter: `${(showPinForm || noteToFocus) ? 'blur(5px)' : ''}` }}>\n\n                <SectionHeader theme={theme}>\n                    <p>Your notes</p>\n                    <IconPlus size='30px' onClick={() => setNoteToFocus('new')} className=\"clickable\" />\n                </SectionHeader>\n\n                <Notes>\n                    {notes.length !== 0\n                        ? <>\n                            {notes.map(note => (\n                                <Note\n                                    setNoteToFocus={setNoteToFocus}\n                                    key={note._id || Math.random()}\n                                    data={note}\n                                />\n                            ))}\n                        </>\n                        : <p>Add your first note!</p>\n                    }\n                </Notes>\n\n                {sharedNotes.length !== 0 &&\n                    <>\n                        <SectionHeader theme={theme}>\n                            <p>Shared notes</p>\n                        </SectionHeader>\n                        <Notes>\n                            {sharedNotes.map(note => (\n                                <Note\n                                    setNoteToFocus={setNoteToFocus}\n                                    key={note._id || Math.random()}\n                                    data={note}\n                                />\n                            ))}\n                        </Notes>\n                    </>\n                }\n\n            </NoteGalleryDiv>\n\n            <Menu />\n        </>\n    )\n}\n\nexport default NoteGallery;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport { IconCheck } from \"@tabler/icons\"\r\n\r\nconst InputField = styled.div`\r\n    margin-top: 10px;\r\n`\r\n\r\nconst Input = styled.input`\r\n    display: none;\r\n`\r\n\r\n\r\nconst Label = styled.label`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n`\r\n\r\nconst Checkbox = styled.div`\r\n    display: grid;\r\n    position: relative;\r\n    place-items: center;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${props => props.theme.bgColor};\r\n    box-shadow: ${props => props.theme.type === 'light' && props.theme.shadow};\r\n    border-radius: 3px;\r\n`\r\n\r\nconst Content = styled.p`\r\n    display: inline-block;\r\n`\r\n\r\nconst RadioField = ({ name, text, isChecked, setIsChecked }) => {\r\n    const { theme } = useContext(ThemeContext)\r\n\r\n    return (\r\n        <InputField>\r\n            <Input\r\n                value={isChecked}\r\n                onChange={() => setIsChecked(!isChecked)}\r\n                type='checkbox'\r\n                id={name}\r\n            />\r\n\r\n            <Label\r\n                IconCheck={IconCheck}\r\n                isChecked={isChecked}\r\n                theme={theme}\r\n                htmlFor={name}\r\n            >\r\n\r\n                <Checkbox theme={theme}>\r\n                    {isChecked && <IconCheck size='100%' color={theme.fontColor} />}\r\n                </Checkbox>\r\n\r\n                <Content>{text}</Content>\r\n\r\n            </Label>\r\n        </InputField>\r\n    );\r\n}\r\n\r\nexport default RadioField;","import { useContext, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { UserContext } from '@contexts/UserContext';\nimport { setError, setValid, isFormUnfilled } from '@helpers/InputErrorHandler'\nimport fetchApi from '@helpers/fetchApi'\nimport SlideAnimation from '@components/SlideAnimation';\nimport InputField from '@components/InputField';\nimport RadioField from '../../components/RadioField';\n\nconst Form = styled.form`\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        padding: 0 30px;\n\n        p {\n            margin-top: 5px;\n        }\n`\n\nconst Button = styled.button`\n        background-color: #2196f3;\n        color: #fafafa;\n        margin-top: 15px;\n        outline: none;\n        border: none;\n        padding: 10px 30px;\n        font-size: 1em;\n        border-radius: 5px;\n`\n\nexport const LoginForm = ({ action }) => {\n    const { setUser } = useContext(UserContext)\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [dontLogout, setDontLogout] = useState(false);\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ login, password })) return\n        const data = { login, password, dontLogout }\n        const res = await fetchApi('/auth/login', data)\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: -300 }} end={{ x: 0 }} isVisible={action === 'login'}>\n                <InputField name='login' text='Login' content={login} setContent={setLogin} />\n                <InputField name='password' text='Password' type='password' content={password} setContent={setPassword} />\n                <RadioField name='expiring' text=\"Don't logout\" isChecked={dontLogout} setIsChecked={setDontLogout} />\n\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    );\n}\n\nexport const SignUpForm = ({ action }) => {\n    const { setUser } = useContext(UserContext)\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ username, password, repeatPassword })) return\n\n        if (password !== repeatPassword) {\n            setError('password', 'Password and second password must be the same')\n            setError('repeatPassword', 'Password and second password must be the same')\n            return\n        }\n        else {\n            setValid('password')\n            setValid('repeatPassword')\n        }\n\n        const user = { username, password }\n        const res = await fetchApi('/auth/signup', user)\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: 300 }} end={{ x: 0 }} isVisible={action === 'signup'}>\n                <InputField\n                    name='username'\n                    text='Username'\n                    content={username}\n                    setContent={setUsername}\n                />\n                <InputField\n                    name='password'\n                    text='Password'\n                    type='password'\n                    content={password}\n                    setContent={setPassword}\n                />\n                <InputField\n                    name='repeatPassword'\n                    text='Repeat password'\n                    type='password'\n                    content={repeatPassword}\n                    setContent={setRepeatPassword}\n                />\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    );\n}\n\nexport const TryForm = ({ action }) => {\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const { setUser } = useContext(UserContext)\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const res = await fetchApi('/auth/signup', { password })\n\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: 300 }} end={{ x: 0 }} isVisible={action === 'try'}>\n\n                <p>\n                    Use app without entering any personal data.\n                </p>\n\n                <InputField\n                    name='password'\n                    text='Password'\n                    type='password'\n                    content={password}\n                    setContent={setPassword}\n                />\n                <InputField\n                    name='repeatPassword'\n                    text='Repeat password'\n                    type='password'\n                    content={repeatPassword}\n                    setContent={setRepeatPassword}\n                />\n\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    )\n}\n","import { useContext, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { LoginForm, SignUpForm, TryForm } from './Forms'\nimport { ThemeContext } from '@contexts/ThemeContext';\n\nconst AuthPageDiv = styled.div`\n    transform: translateX(-50%) translateY(-50%);\n    padding: 20px 10px;\n    font-size: 18px;\n    border-radius: 10px;\n    transition: 0.3s;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 400px;\n\n    @media screen and (max-width: 700px) {\n        width: 95vw;\n    }\n    \n    color: ${({ theme }) => theme.fontColor};\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n\n    h2 {\n        font-size: 2rem;\n    }\n`\n\nconst ActionSwitch = styled.div`\n    width: 70%;\n    height: 40px;\n    border-radius: 1000px;\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: space-around;\n    box-shadow: ${({ theme }) => theme.shadow};\n    margin-top: 10px;\n    overflow: hidden;\n\n    p {\n        flex-grow: 1;\n        display: grid;\n        place-items: center;\n        transition: 0.3s;\n\n        &:not(.active) {\n            border: 2px solid ${({ theme }) => theme.uiColor};\n        }\n    }\n\n    .active {\n        color: #fafafa;\n        background-color:#2196f3;\n    }\n`\n\nconst Main = () => {\n    const { theme } = useContext(ThemeContext)\n\n    const [action, setAction] = useState('login');\n\n    return (\n        <>\n            <AuthPageDiv theme={theme}>\n\n                <ActionSwitch theme={theme}>\n                    <p onClick={() => setAction('login')} className={`clickable ${action === 'login' ? 'active' : ''}`}>\n                        Login\n                    </p>\n                    <p onClick={() => setAction('signup')} className={`clickable ${action === 'signup' ? 'active' : ''}`}>\n                        Sign Up\n                    </p>\n                    <p onClick={() => setAction('try')} className={`clickable ${action === 'try' ? 'active' : ''}`}>\n                        Try\n                    </p>\n                </ActionSwitch>\n\n                <LoginForm action={action} />\n                <SignUpForm action={action} />\n                <TryForm action={action} />\n\n            </AuthPageDiv>\n        </>\n    );\n}\n\nexport default Main;","import { useContext } from 'react';\nimport NoteGallery from '@pages/NoteGallery';\nimport AuthPage from '@pages/Auth';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport UserContextProvider, { UserContext } from './contexts/UserContext';\n\nconst App = () => {\n  return (\n    <ThemeContextProvider>\n      <UserContextProvider>\n\n        <ViewHandler />\n\n      </UserContextProvider>\n    </ThemeContextProvider>\n  );\n}\n\nconst ViewHandler = () => {\n  const { user } = useContext(UserContext)\n\n  return (\n    <>\n      {user\n        ? <NoteGallery />\n        : <AuthPage />\n      }\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}