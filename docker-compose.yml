version: "3.9"

services:
  note-frontend:
    container_name: ${DOCKER_FRONTEND_CONTAINER_NAME}
    command: npm start
    build:
      context: ./frontend/docker
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app/
    env_file:
      - ".env"
      - "frontend/.env"
    networks:
      note-local-network:
        ipv4_address: ${DOCKER_FRONTEND_INTERNAL_IP}

  note-backend:
    container_name: ${DOCKER_BACKEND_CONTAINER_NAME}
    command: npm run dev
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app/
    env_file:
      - ".env"
      - "backend/.env"
    depends_on:
      - ${DOCKER_DB_CONTAINER_NAME}
    networks:
      note-local-network:
        ipv4_address: ${DOCKER_BACKEND_INTERNAL_IP}

  note-proxy:
    container_name: ${DOCKER_PROXY_CONTAINER_NAME}
    build:
      context: ./proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx/certs:/etc/nginx/ssl
      - ./proxy/nginx/templates:/etc/nginx/templates
      - ./proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ${DOCKER_FRONTEND_CONTAINER_NAME}
      - ${DOCKER_BACKEND_CONTAINER_NAME}
    env_file:
      - ".env"
      - "./proxy/.env"
    networks:
      note-local-network:
        ipv4_address: ${DOCKER_PROXY_INTERNAL_IP}

  note-db:
    container_name: ${DOCKER_DB_CONTAINER_NAME}
    image: mongo
    restart: unless-stopped
    networks:
      note-local-network:
        ipv4_address: ${DOCKER_DB_INTERNAL_IP}

networks:
  note-local-network:
    driver: bridge
    ipam:
      config:
        - subnet: 102.137.0.0/24
