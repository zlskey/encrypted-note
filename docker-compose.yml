version: "3.9"

services:
  note-frontend:
    container_name: ${DOCKER_FRONTEND_CONTAINER_NAME}
    command: npm start
    build:
      context: ./frontend/docker
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app/
    env_file:
      - ".env"
      - "frontend/.env"
    networks:
      - note-local-network
      - proxy
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.note.entrypoints=https"
      - "traefik.http.routers.note.rule=Host(`note.${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.note.tls=true"
      - "traefik.http.routers.note.service=note-service"
      - "traefik.http.services.note-service.loadbalancer.server.port=${DOCKER_FRONTEND_INTERNAL_PORT}"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"

  note-backend:
    container_name: ${DOCKER_BACKEND_CONTAINER_NAME}
    command: npm run dev
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app/
    env_file:
      - ".env"
      - "backend/.env"
    depends_on:
      - ${DOCKER_DB_CONTAINER_NAME}
    networks:
      - note-local-network
      - proxy
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.note-api.entrypoints=https"
      - "traefik.http.routers.note-api.rule=Host(`note-api.${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.note-api.tls=true"
      - "traefik.http.routers.note-api.service=note-api-service"
      - "traefik.http.services.note-api-service.loadbalancer.server.port=${DOCKER_BACKEND_INTERNAL_PORT}"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"

  note-db:
    container_name: ${DOCKER_DB_CONTAINER_NAME}
    image: mongo
    restart: unless-stopped
    networks:
      - note-local-network

networks:
  proxy:
    external: true
  note-local-network:
    driver: bridge