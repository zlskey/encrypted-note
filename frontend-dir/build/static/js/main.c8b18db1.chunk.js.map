{"version":3,"sources":["contexts/ThemeContext.js","scripts/fetchApi.js","components/SiteLoader.js","scripts/responsiveFacilities.js","components/partials/Alert.js","contexts/UserContext.js","components/NoteGallery/Note.js","components/partials/CloseOnOuterClick.js","scripts/InputErrorHandler.js","components/NoteGallery/ShareWindow.js","components/NoteGallery/FocusedNote.js","components/partials/SlideAnimation.js","components/NoteGallery/Menu/ThemeSwitch.js","components/partials/InputField.js","components/NoteGallery/Menu/Form.js","components/NoteGallery/Menu/EncryptionSettings.js","components/NoteGallery/Menu/PasswordSettings.js","components/NoteGallery/Menu/index.js","components/NoteGallery/PinForm.js","components/NoteGallery/index.js","components/AuthPage/Forms.js","components/AuthPage/index.js","App.js","index.js"],"names":["ThemeContext","createContext","darkTheme","type","fontColor","bgColor","uiColor","shadow","lightTheme","ThemeContextProvider","children","useState","theme","setTheme","isDarkTheme","setIsDarkTheme","useEffect","document","body","style","backgroundColor","Provider","value","API_URL","process","REACT_APP_API_URL","fetchApi","url","a","method","console","log","fetch","credentials","JSON","stringify","headers","cors","res","ok","json","content","error","Loader","styled","div","SiteLoader","useContext","className","getSize","width","window","innerWidth","AlertDiv","Alert","setContent","showAlert","setShowAlert","addEventListener","removeEventListener","transition","useTransition","from","opacity","enter","leave","item","UserContext","UserContextProvider","user","setUser","isLoading","setIsLoading","alertContent","setAlertContent","NoteDiv","DateSkeleton","ContentSkeleton","LoadingContent","Note","setNoteToFocus","data","updatedAt","date","Date","toLocaleDateString","onClick","CloseOnOuterClick","setSomething","valueToSet","node","useRef","handleClick","e","current","contains","target","ref","setValid","name","querySelector","classList","add","setError","el","textContent","remove","isFormUnfilled","fields","isUnfilled","field","ShareWindowDiv","User","p","Input","input","ShareWindow","note","setNotes","newShare","setNewShare","id","_id","shareNote","preventDefault","recipient","recipients","notes","map","unlinkNote","recipientToUnlink","title","size","onSubmit","onChange","placeholder","FocusedNoteWrapper","FocusedNoteWindow","Icon","props","stroke","FocusedNote","setSharedNotes","isSaved","setIsSaved","isEditing","setIsEditing","author","username","isShared","showShareWindow","setShowShareWindow","removeNote","filter","saveNote","saveChanges","IconArrowLeft","IconEdit","IconTrash","IconShare","IconUnlink","IconDeviceFloppy","handleSaveButtonClick","color","autoComplete","autoFocus","SlideAnimation","isVisible","start","end","position","Switch","ThemeDiv","ThemeSwitch","prev","InputFieldDiv","Label","label","InputField","text","htmlFor","spellCheck","StyledForm","form","Button","button","Form","handleSubmit","setShowForm","EncryptionSettings","showSetPinForm","setShowSetPinForm","showChangePinForm","setShowChangePinForm","pin","setPin","currentPin","setCurrentPin","newPin","setNewPin","encryption","then","showForm","currentPassword","setCurrentPassword","newPassword","setnewPassword","changePassword","MenuWrapper","MenuButton","MenuDiv","Menu","showMenu","setShowMenu","logout","y","padding","PasswordSettings","PinFormDiv","PinForm","setShowPinForm","getNotes","userNotes","sharedNotes","NoteGalleryDiv","Notes","getColumns","SectionHeader","NoteGallery","noteToFocus","range","Array","fill","showPinForm","length","Math","random","LoginForm","action","login","setLogin","password","setPassword","x","SignUpForm","setUsername","repeatPassword","setRepeatPassword","TryForm","AuthPageDiv","ActionSwitch","Main","setAction","ViewHandler","AuthPage","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8b18db1.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nexport const ThemeContext = createContext(null)\n\nconst darkTheme = {\n    type: 'dark',\n    fontColor: '#fafafa',\n    bgColor: '#212121',\n    uiColor: '#424242',\n    shadow: '0 0 3px #616161'\n}\nconst lightTheme = {\n    type: 'light',\n    fontColor: '#424242',\n    bgColor: '#fafafa',\n    uiColor: '#eeeeee',\n    shadow: '0 0 10px -5px #212121'\n}\n\nconst ThemeContextProvider = ({ children }) => {\n    const [theme, setTheme] = useState(lightTheme)\n    const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n    useEffect(() => document.body.style.backgroundColor = theme.bgColor, [theme])\n    useEffect(() => setTheme(isDarkTheme ? darkTheme : lightTheme), [isDarkTheme])\n\n    return (\n        <ThemeContext.Provider value={{ theme, setIsDarkTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n\nexport default ThemeContextProvider;\n","const API_URL = process.env.REACT_APP_API_URL\n\nconst fetchApi = async (url, body, method = `POST`) => {\n    console.log(API_URL)\n    try {\n        let res;\n\n        if (body) {\n            res = await fetch(API_URL + url, {\n                method: method,\n                credentials: `include`,\n                body: JSON.stringify(body),\n                headers: { 'Content-Type': 'application/json' },\n                cors: 'same-origin',\n            });\n        } else {\n            res = await fetch(API_URL + url, {\n                credentials: `include`,\n                cors: 'same-origin',\n            })\n        }\n\n        const ok = res.ok\n        const { content, error } = await res.json()\n\n        if (res.ok) return { content, ok }\n        else return { error, ok }\n    }\n    catch (err) {\n        return { ok: false, error: `Can't connect to the server` }\n    }\n}\nexport default fetchApi","import { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nconst Loader = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    width: 20rem;\n    aspect-ratio: 1/1;\n    border-radius: 50%;\n\n    * {\n        border-radius: 50%;\n        background-color: ${({ theme }) => theme.bgColor};\n        border: 0.5rem solid transparent;\n        animation: rotate infinite linear;\n        animation-duration: 8s;\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n        box-sizing:border-box;\n    }\n\n    .inlineBorders {\n        border-inline-color: ${({ theme }) => theme.fontColor};\n    }\n\n    .blockBorders {\n        border-block-color: ${({ theme }) => theme.fontColor};\n    }\n\n    @keyframes rotate {\n        from { transform: rotate(0); }\n        to { transform: rotate(360deg); }\n    }   \n`\n\nconst SiteLoader = () => {\n    const { theme } = useContext(ThemeContext)\n\n    // I know it`s nonsense but it looks cool for me 🤷‍♂️\n    return (\n        <Loader theme={theme}>\n            <div className=\"blockBorders\">\n                <div className=\"inlineBorders\">\n                    <div className=\"blockBorders\">\n                        <div className=\"inlineBorders\">\n                            <div className=\"blockBorders\">\n                                <div className=\"inlineBorders\">\n                                    <div className=\"blockBorders\">\n                                        <div className=\"inlineBorders\">\n                                            <div className=\"blockBorders\">\n                                                <div className=\"inlineBorders\">\n                                                    <div className=\"blockBorders\">\n                                                        <div className=\"inlineBorders\">\n                                                            <div className=\"blockBorders\">\n                                                                <div className=\"inlineBorders\">\n                                                                    <div className=\"blockBorders\">\n                                                                        <div className=\"inlineBorders\">\n                                                                            <div className=\"blockBorders\">\n                                                                                <div className=\"inlineBorders\">\n                                                                                    <div className=\"blockBorders\">\n                                                                                        <div className=\"inlineBorders\"></div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Loader>\n    )\n}\n\nexport default SiteLoader;","export const getSize = () => {\n\n    const width = window.innerWidth\n\n    if (width > 1400) return '18px'\n    else if (width > 1200) return '17px'\n    else return '16px'\n\n}\n\nexport const getColumns = () => {\n\n    const width = window.innerWidth\n\n    if (width > 1500) return '1fr 1fr 1fr 1fr'\n    else if (width > 1000) return '1fr 1fr 1fr'\n    else return '1fr 1fr'\n}\n\n","import styled from \"styled-components\";\nimport { IconAlertCircle } from '@tabler/icons';\nimport { useContext, useEffect, useState } from \"react\";\nimport { useTransition, animated } from 'react-spring'\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { getSize } from '../../scripts/responsiveFacilities'\n\nconst AlertDiv = styled.div`\n    position: absolute;\n    bottom: 20px;\n    right: 20px;\n    width: 300px;\n    aspect-ratio: 20/4;\n    background-color: #1e88e5 ;\n    z-index: 100;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    color: #fafafa;\n    box-shadow: ${({ theme }) => theme.shadow};\n    gap: 5px;\n    font-size: ${getSize()};\n`\n\nconst Alert = ({ content, setContent }) => {\n    const { theme } = useContext(ThemeContext)\n    const [showAlert, setShowAlert] = useState(false);\n\n    useEffect(() => {\n        document.addEventListener('click', () => setContent(''))\n        return () => document.removeEventListener('click', () => setContent(''))\n    })\n\n    useEffect(() => setShowAlert(content ? true : false), [content])\n\n    const transition = useTransition(showAlert, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    return (\n        <>\n            {transition((style, item) =>\n                item &&\n                <animated.div style={style}>\n                    <AlertDiv theme={theme}>\n                        <p>{content}</p> <IconAlertCircle />\n                    </AlertDiv>\n                </animated.div>\n            )}\n        </>\n\n    );\n}\n\nexport default Alert;\n","import { createContext, useContext, useEffect, useState } from 'react'\nimport fetchApi from '../scripts/fetchApi';\nimport Loader from '../components/SiteLoader'\nimport { ThemeContext } from './ThemeContext';\nimport Alert from '../components/partials/Alert'\n\nexport const UserContext = createContext(null)\n\n\nconst UserContextProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const { setIsDarkTheme } = useContext(ThemeContext)\n    const [alertContent, setAlertContent] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetchApi('/verify')\n            if (res.ok) {\n                setUser(res.content)\n                setIsLoading(false)\n            }\n            else setAlertContent(res.error)\n        })()\n    }, [])\n\n    useEffect(() => user && setIsDarkTheme(user.theme === 'light' ? false : true), [user])\n\n    return (\n        <UserContext.Provider value={{ user, setUser }}>\n            <Alert content={alertContent} setContent={setAlertContent} />\n            {\n                isLoading\n                    ? <Loader />\n                    : <>{children}</>\n            }\n        </UserContext.Provider>\n    );\n}\n\nexport default UserContextProvider;\n","import { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { getSize } from '../../scripts/responsiveFacilities';\n\nconst NoteDiv = styled.div`\n    border-radius: 10px;\n    padding-block: calc(0.1 * ${getSize()});\n    padding-inline: calc(0.5 * ${getSize()});\n    max-height: 150px;\n    white-space: pre;\n    line-height: 1.7rem;\n    max-height: 8rem;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n    display: inline-block;\n    overflow: hidden !important;\n    text-overflow: ellipsis;\n    font-weight: 300;\n    color: inherit;\n    border: 5px solid ${({ theme }) => theme.uiColor};\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n\n    .date {\n        font-size: calc(0.8 * ${getSize});\n        margin: 0;\n        height: 10px;\n    } \n\n    .content {\n        font-size: calc(0.9* ${getSize()});\n        margin-top: ${getSize()};\n    }\n`\n\nconst DateSkeleton = styled.div`\n    height: calc(0.8 *  ${getSize()});\n    width: 70px;\n    display: inline-block;\n    border-radius: 10px;\n    position: relative;\n    overflow: hidden;\n    background-color: ${({ theme }) => theme.bgColor};\n`\n\nconst ContentSkeleton = styled.div`\n    height: calc(4 *  ${getSize()});\n    width: 100%;\n    border-radius: 10px;\n    margin-top: 5px;\n    position: relative;\n    overflow: hidden;\n    background-color: ${({ theme }) => theme.bgColor};\n`\n\nconst LoadingContent = styled.div`\n    position: absolute;\n    height: 10%;\n    left: -10%;\n    top: 0;\n    width: 100%;\n    opacity: 0.5;\n    filter: blur(30px);\n    transform: rotate(-10deg);\n    animation: loadAnimation 1s linear infinite;\n    background-color: ${({ theme }) => theme.fontColor};\n\n    @keyframes loadAnimation {\n        from {\n            top: -100%;\n        }\n        to {\n           top: 200%;\n        }\n    }\n`\n\nconst Note = ({ setNoteToFocus, data }) => {\n    const { theme } = useContext(ThemeContext)\n    const { updatedAt, content } = data\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        if (data !== 'loading') setIsLoading(false)\n    }, [])\n\n    const date = new Date(updatedAt).toLocaleDateString()\n\n\n    return (\n        <NoteDiv\n            theme={theme}\n            className={isLoading ? '' : 'clickable'}\n            onClick={() => !isLoading && setNoteToFocus(data)}\n        >\n\n            {isLoading\n                ? <>\n                    <DateSkeleton theme={theme} ><LoadingContent theme={theme} /></DateSkeleton>\n                    <ContentSkeleton theme={theme}><LoadingContent theme={theme} /></ContentSkeleton>\n                </>\n                : <>\n                    <div className=\"date\">{date}</div>\n                    <div className=\"content\">{content}</div>\n                </>\n            }\n\n        </NoteDiv>\n    );\n}\n\nexport default Note","import React, { useEffect, useRef } from \"react\"\n\nconst CloseOnOuterClick = ({ children, setSomething, valueToSet = false }) => {\n    const node = useRef(null)\n\n    const handleClick = e => {\n        if (!node.current) return\n\n        if (node.current.contains(e.target)) return\n        else setSomething(valueToSet)\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClick)\n        return () => document.removeEventListener('click', handleClick)\n    }, [])\n\n    return <span ref={node}>{children}</span>\n}\n\nexport default CloseOnOuterClick;","export const setValid = name => document.querySelector(`.input-field .error.${name}`).classList.add('hide')\nexport const setError = (name, content) => {\n    const el = document.querySelector(`.error.${name}`)\n    el.textContent = content\n    el.classList.remove('hide')\n}\nexport const isFormUnfilled = fields => {\n    let isUnfilled = false\n\n    for (const field in fields) {\n        const content = fields[field]\n\n        if (!content) {\n            setError(field, `Oops, you have to fill this field`)\n            isUnfilled = true\n        }\n        else setValid(field)\n    }\n\n    return isUnfilled\n}","import styled from \"styled-components\";\r\nimport { useContext, useState } from \"react\";\r\nimport fetchApi from \"../../scripts/fetchApi\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { IconUnlink } from '@tabler/icons';\r\nimport { setError } from '../../scripts/InputErrorHandler'\r\n\r\nconst ShareWindowDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row; \r\n    align-items: center;    \r\n    gap: 5px;\r\n`\r\n\r\nconst User = styled.p`\r\n    background-color: ${({ theme }) => theme.fontColor};\r\n    color: ${({ theme }) => theme.bgColor};\r\n    padding: 3px 10px;\r\n    border-radius: 100px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n`\r\n\r\nconst Input = styled.input`\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    transition: 0.3s;\r\n\r\n    /* &:focus {\r\n        border-bottom: 1px solid ${({ theme }) => theme.fontColor};\r\n    } */\r\n`\r\n\r\nconst ShareWindow = ({ note, setNotes }) => {\r\n    const { theme } = useContext(ThemeContext)\r\n    const [newShare, setNewShare] = useState('');\r\n\r\n    const { _id: id, content } = note\r\n\r\n    const shareNote = async e => {\r\n        e.preventDefault()\r\n\r\n        const res = await fetchApi('/share-note', { id, content, recipient: newShare }, 'PATCH')\r\n\r\n        if (res.ok) {\r\n            note.recipients = res.content\r\n            setNotes(notes => {\r\n                return notes.map(el => {\r\n                    if (el._id === id) return note\r\n                    else return el\r\n                })\r\n            })\r\n        }\r\n        else setError('res', res.error)\r\n    }\r\n\r\n    const unlinkNote = async recipientToUnlink => {\r\n        const res = await fetchApi('/unlink-note', { recipientToUnlink, id, content }, 'PATCH')\r\n\r\n        if (res.ok) {\r\n            note.recipients = res.content\r\n            setNotes(notes => {\r\n                return notes.map(note => {\r\n                    if (note._id === id) return note\r\n                    else return note\r\n                })\r\n            })\r\n        }\r\n        else setError('res', res.error)\r\n    }\r\n\r\n    return (\r\n        <ShareWindowDiv theme={theme}>\r\n            <p>Users with access: </p>\r\n            {note.recipients.map(user => (\r\n                <User\r\n                    key={user}\r\n                    className='clickable'\r\n                    title={`unlink ${user}`}\r\n                    theme={theme}\r\n                    onClick={e => unlinkNote(user)}\r\n                >\r\n                    {user} <IconUnlink size=\"15\" />\r\n                </User>\r\n            ))}\r\n            <form onSubmit={e => shareNote(e)}>\r\n                <Input value={newShare} onChange={e => setNewShare(e.target.value)} theme={theme} type=\"text\" placeholder='share to...' />\r\n                <div className=\"error res\"></div>\r\n            </form>\r\n        </ShareWindowDiv>\r\n    );\r\n}\r\n\r\nexport default ShareWindow;","import styled from 'styled-components';\nimport { useContext, useState } from 'react'\nimport { IconEdit, IconTrash, IconArrowLeft, IconDeviceFloppy, IconUnlink, IconShare } from '@tabler/icons';\n\nimport fetchApi from '../../scripts/fetchApi';\nimport CloseOnOuterClick from '../partials/CloseOnOuterClick.js';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { UserContext } from '../../contexts/UserContext'\nimport { getSize } from '../../scripts/responsiveFacilities';\nimport Alert from '../partials/Alert';\nimport ShareWindow from './ShareWindow';\n\n\nconst FocusedNoteWrapper = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: grid;\n    place-items: center;\n    z-index: 10;\n    font-size: ${getSize()};\n`\n\nconst FocusedNoteWindow = styled.div`\n    width: 55vw;\n    height: 60vh;\n    z-index: 10;\n    border-radius: 10px;\n    margin-inline: auto;\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    color: ${({ theme }) => theme.fontColor};\n    transition: 0.1s;\n    overflow: hidden;\n\n    @media screen and (max-width: 1000px) {\n        width: 95vw;\n    }\n\n    .top-panel {\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        box-shadow: ${({ theme }) => theme.shadow};\n        gap: 10px;\n        \n        .upper-row {\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n        }\n\n        .buttons {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            font-size: 20px;\n            gap: 10px;\n        }\n    }\n\n    .content {\n        height: calc(100% - 50px); \n        padding-inline: 15px;\n        font-weight: 300;\n        padding-block: ${getSize()};\n        font-size: ${getSize()};\n        white-space: pre;\n        overflow-y: scroll;\n        overflow-x: hidden;\n    }\n\n    textarea {\n        background-color: transparent;\n        width: calc(100% - 20px);\n        margin-inline: 10px;\n        border-radius: 10px;\n        height: calc(100% - 60px);\n        outline: none;\n        padding: 10px;\n        font-weight: 300;\n        font-size: ${getSize()};\n        border: none;\n\n        color: ${({ theme }) => theme.fontColor}\n}\n`\n\nconst FocusedNote = ({ note, setNoteToFocus, setNotes, setSharedNotes }) => {\n    const { theme } = useContext(ThemeContext)\n    const { user } = useContext(UserContext)\n    const [content, setContent] = useState(note.content || '');\n    const [alertContent, setAlertContent] = useState('');\n\n    const [isSaved, setIsSaved] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n    const [isShared] = useState(note.author !== user.username);\n    const [showShareWindow, setShowShareWindow] = useState(false);\n\n    const date =\n        note.updatedAt\n            ? new Date(note.updatedAt).toLocaleDateString()\n            : new Date().toLocaleDateString()\n\n    const removeNote = async () => {\n        const res = await fetchApi('/note', { id: note._id }, 'DELETE')\n\n        if (res.ok) {\n            setNotes(notes => notes.filter(el => el._id !== note._id))\n            setNoteToFocus(null)\n        }\n        else setAlertContent(res.error)\n    }\n\n\n    const saveNote = async () => {\n        const res = await fetchApi('/note', { content }, 'POST')\n\n        if (res.ok) {\n            setNotes(notes => notes ? [...notes, res.content] : [res.content])\n            setIsSaved(true)\n        }\n        else setAlertContent(res.error)\n    }\n\n    const saveChanges = async () => {\n        const res = await fetchApi('/note', { content, id: note._id }, 'PATCH')\n\n        if (res.ok) {\n            setIsSaved(true)\n            setNotes(notes => notes.map(el => {\n                if (el._id === note._id) el.content = content\n                return el\n            }))\n        }\n        else setAlertContent(res.error)\n    }\n\n    const unlinkNote = async () => {\n        const res = await fetchApi('/unlink-note', { id: note._id, content: note.content }, 'PATCH')\n\n        if (res.ok) {\n            setSharedNotes(notes => notes.filter(el => el._id !== note._id))\n            setNoteToFocus(null)\n        }\n        else setAlertContent(res.error)\n    }\n\n    const handleSaveButtonClick = () => {\n        if (!content || isSaved) return\n        else if (note === 'new') saveNote()\n        else if (isEditing) saveChanges()\n        else return\n    }\n\n    return (\n        <FocusedNoteWrapper>\n            <Alert content={alertContent} setContent={setAlertContent} />\n\n            <CloseOnOuterClick setSomething={setNoteToFocus}>\n                <FocusedNoteWindow theme={theme}>\n\n                    <div className=\"top-panel\">\n                        <div className=\"upper-row\">\n                            <div className='buttons'>\n                                <Icon title='Close' Icon={IconArrowLeft} handleClick={() => setNoteToFocus(null)} />\n\n                                {note !== 'new' && !isShared &&\n                                    <>\n                                        <Icon title='Edit note' Icon={IconEdit} handleClick={() => setIsEditing(true)} />\n                                        <Icon title='Remove note' Icon={IconTrash} handleClick={() => removeNote()} />\n                                        <Icon title='Share note' Icon={IconShare} handleClick={() => setShowShareWindow(!showShareWindow)} />\n                                    </>\n                                }\n\n\n                                {isShared && note !== 'new' &&\n                                    <>\n                                        <Icon title='Unlink note' Icon={IconUnlink} handleClick={() => unlinkNote()} />\n                                        <p title='author'>{note.author}</p>\n                                    </>\n                                }\n\n                                {isSaved !== null &&\n                                    <Icon\n                                        Icon={IconDeviceFloppy}\n                                        handleClick={() => handleSaveButtonClick()}\n                                        color={isSaved ? '#4caf50' : '#f44336'}\n                                    />\n                                }\n                            </div>\n\n                            <div className=\"date\">{date}</div>\n                        </div>\n                        {showShareWindow && note.author === user.username && <ShareWindow note={note} setNotes={setNotes} />}\n                    </div>\n\n                    {note === 'new' || isEditing\n                        ? <textarea\n                            autoComplete='off'\n                            autoFocus='on'\n                            value={content}\n                            onChange={e => {\n                                setContent(e.target.value)\n                                setIsSaved(false)\n                            }} />\n                        : <div className=\"content\">{note.content}</div>\n                    }\n\n                </FocusedNoteWindow>\n            </CloseOnOuterClick>\n        </FocusedNoteWrapper>\n    );\n}\n\nconst Icon = ({ handleClick, Icon, title, ...props }) => <div title={title}><Icon onClick={handleClick} size='30px' stroke='1' className='clickable' {...props} /></div>\n\nexport default FocusedNote","import { useTransition, animated } from 'react-spring'\n\nconst SlideAnimation = ({ isVisible, children, start, end }) => {\n    const transition = useTransition(isVisible, {\n        from: { ...start, opacity: 0, position: 'absolute', },\n        enter: { ...end, opacity: 1, position: 'static', },\n        leave: { ...start, opacity: 0, position: 'absolute', },\n    })\n\n    return (\n        <>\n            {transition((style, item) =>\n                item &&\n                <animated.div style={style}>\n                    {children}\n                </animated.div>\n            )}\n        </>\n    );\n}\n\nexport default SlideAnimation;","import { useContext, useState } from 'react'\nimport styled from \"styled-components\";\nimport { IconMoonStars, IconBrightness2, } from '@tabler/icons';\n\nimport { getSize } from \"../../../scripts/responsiveFacilities\";\nimport { ThemeContext } from '../../../contexts/ThemeContext';\nimport fetchApi from '../../../scripts/fetchApi';\nimport Alert from '../../partials/Alert';\n\nconst Switch = styled.div`\n    border-radius: 9999px;\n    height: calc(1.5 * ${getSize()});\n    aspect-ratio: 2/1;\n    position: relative;\n    transition: 0.3s;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    box-sizing: content-box;\n    cursor: pointer;    \n\n\n    &::after {\n        content: '';\n        width: calc(1.5 * ${getSize()});\n        aspect-ratio: 1/1;\n        border-radius: 50%;\n        transition: 0.3s;\n        display: inline-block;\n        \n        transform: ${({ theme }) => theme.type === 'light' ? 'translateX(100%)' : ''};\n\n        background-color: ${({ theme }) => theme.fontColor};\n    }\n        \n    border: 3px solid ${({ theme }) => theme.bgColor};\n    background-color: ${({ theme }) => theme.bgColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst ThemeDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    gap: 0 20px;\n    margin-block: 10px;\n\n    span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 5px;\n    }\n`\n\nconst ThemeSwitch = () => {\n    const { theme, setIsDarkTheme } = useContext(ThemeContext)\n    const [alertContent, setAlertContent] = useState('');\n\n    const handleClick = async () => {\n        const res = await fetchApi('/theme', {}, 'PATCH')\n        if (res.ok) setIsDarkTheme(prev => !prev)\n        else setAlertContent(res.error)\n    }\n\n    return (\n        <>\n            <Alert content={alertContent} setContent={setAlertContent} />\n            <ThemeDiv>\n\n                <p>Theme:</p>\n\n                <span>\n                    <IconMoonStars />\n                    <Switch theme={theme} onClick={() => handleClick()} />\n                    <IconBrightness2 />\n                </span>\n\n            </ThemeDiv>\n        </>\n    );\n}\n\nexport default ThemeSwitch;","import { useContext } from 'react';\nimport styled from 'styled-components'\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nconst InputFieldDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    text-align: left;\n`\n\nconst Label = styled.label`\n        margin-bottom: 5px;\n        font-size: 1.2rem;\n`\n\nconst Input = styled.input`\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        padding: 10px;\n        font-size: 1em;\n\n        color: inherit;\n        background-color: ${({ theme }) => theme.bgColor};\n        box-shadow: ${({ theme }) => theme.shadow}\n`\n\nconst InputField = ({ name, text, type = 'text', content, setContent, ...props }) => {\n    const { theme } = useContext(ThemeContext)\n\n    return (\n        <InputFieldDiv className='input-field'>\n            <Label htmlFor={name}>{text}</Label>\n            <Input\n                theme={theme}\n                type={type}\n                id={name}\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                spellCheck='off'\n                autoComplete='off'\n                {...props}\n            />\n            <div className={`${name} error hide`} />\n        </InputFieldDiv>\n    );\n}\n\nexport default InputField","import styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { getSize } from \"../../../scripts/responsiveFacilities\";\nimport { ThemeContext } from \"../../../contexts/ThemeContext\";\nimport CloseOnOuterClick from \"../../partials/CloseOnOuterClick\";\n\nconst StyledForm = styled.form`\n    width: 70%;\n    margin: 0 auto;\n    margin-bottom: 20px;\n`\n\nconst Button = styled.button`\n    width: 50%;\n    background-color: #3f51b5;\n    color: #fafafa;\n    padding-block: 10px;\n    aspect-ratio: 20/3;\n    border: none;\n    outline: none;\n    margin-top: 10px;\n    margin-bottom: 5px;\n    font-size: calc(0.9 * ${getSize()});\n    box-shadow: ${({ theme }) => theme.shadow}\n`\n\nconst Form = ({ children, handleSubmit, setShowForm }) => {\n    const { theme } = useContext(ThemeContext)\n\n    return (\n        <CloseOnOuterClick setSomething={setShowForm}>\n            <StyledForm onSubmit={e => handleSubmit(e)} >\n                {children}\n                <Button className='clickable' theme={theme}>Confirm</Button>\n                <div className=\"res error hide\"></div>\n            </StyledForm>\n        </CloseOnOuterClick>\n    );\n}\n\nexport default Form;","import { useContext, useState } from 'react'\nimport { IconLock } from '@tabler/icons';\nimport styled from \"styled-components\";\n\nimport { ThemeContext } from '../../../contexts/ThemeContext';\nimport { UserContext } from '../../../contexts/UserContext'\nimport InputField from '../../partials/InputField'\nimport { getSize } from \"../../../scripts/responsiveFacilities\";\nimport { isFormUnfilled, setError } from '../../../scripts/InputErrorHandler'\nimport fetchApi from '../../../scripts/fetchApi';\nimport Form from './Form';\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst EncryptionSettings = () => {\n    const { theme } = useContext(ThemeContext)\n    const { user, setUser } = useContext(UserContext)\n    const [showSetPinForm, setShowSetPinForm] = useState(false);\n    const [showChangePinForm, setShowChangePinForm] = useState(false);\n\n    const [pin, setPin] = useState('');\n\n    const [currentPin, setCurrentPin] = useState('');\n    const [newPin, setNewPin] = useState('');\n\n    const startEncryption = e => {\n        e.preventDefault()\n        if (isFormUnfilled({ pin })) return\n\n        fetchApi('/start-encryption', { pin }, 'PATCH')\n            .then(res => {\n                if (res.ok) {\n                    setUser(res.content)\n                    setShowSetPinForm(false)\n                }\n                else setError('pin', res.error)\n            })\n    }\n\n    const changePin = e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ currentPin, newPin })) return\n\n        fetchApi('/change-pin', { currentPin, newPin }, 'PATCH')\n            .then(res => {\n                if (res.ok) setShowChangePinForm(false)\n                else setError('res', res.error)\n            })\n    }\n\n    return (\n        <>\n            <Button\n                color=\"#03a9f4\"\n                theme={theme}\n                className='clickable'\n                onClick={() => user.encryption ? setShowChangePinForm(value => !value) : setShowSetPinForm(value => !value)}\n            >\n                {user.encryption ? 'Change PIN' : 'Turn on encryption'} <IconLock />\n            </Button>\n\n            {showSetPinForm &&\n                <Form setShowForm={setShowSetPinForm} handleSubmit={startEncryption}>\n                    <InputField name='pin' text='PIN to encrypt files' type='password' content={pin} setContent={setPin} />\n                </Form>\n            }\n\n            {showChangePinForm &&\n                <Form setShowForm={setShowChangePinForm} handleSubmit={changePin}>\n                    <InputField name='currentPin' text='Current PIN' type='password' content={currentPin} setContent={setCurrentPin} />\n                    <InputField name='newPin' text='New PIN' type='password' content={newPin} setContent={setNewPin} />\n                </Form>\n            }\n\n        </>\n    );\n}\n\nexport default EncryptionSettings;","import { IconLock } from '@tabler/icons';\nimport { useContext, useState } from 'react'\nimport styled from \"styled-components\";\n\nimport InputField from '../../partials/InputField'\nimport { ThemeContext } from '../../../contexts/ThemeContext';\nimport { getSize } from \"../../../scripts/responsiveFacilities\";\nimport Form from './Form';\nimport { isFormUnfilled, setError } from '../../../scripts/InputErrorHandler'\nimport fetchApi from '../../../scripts/fetchApi';\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst EncryptionSettings = () => {\n    const { theme } = useContext(ThemeContext)\n\n    const [showForm, setShowForm] = useState(false);\n\n    const [currentPassword, setCurrentPassword] = useState('');\n    const [newPassword, setnewPassword] = useState('');\n\n    const changePassword = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ currentPassword, newPassword })) return\n\n        const res = await fetchApi('/change-password', { currentPassword, newPassword }, 'PATCH')\n        if (res.ok) setShowForm(false)\n        else setError('res', res.error)\n    }\n\n    return (\n        <>\n            <Button\n                color=\"#03a9f4\"\n                theme={theme}\n                className='clickable'\n                onClick={() => setShowForm(!showForm)}\n            >\n                Change password <IconLock />\n            </Button>\n\n\n            {showForm &&\n                <Form setShowForm={setShowForm} handleSubmit={changePassword}>\n                    <InputField name='currentPassword' text='Current password' type='password' content={currentPassword} setContent={setCurrentPassword} />\n                    <InputField name='newPassword' text='New password' type='password' content={newPassword} setContent={setnewPassword} />\n                </Form>\n            }\n\n        </>\n    );\n}\n\nexport default EncryptionSettings;","import { useContext, useState } from 'react'\nimport styled from \"styled-components\";\nimport { IconGridDots } from '@tabler/icons';\n\nimport { ThemeContext } from '../../../contexts/ThemeContext';\nimport { UserContext } from '../../../contexts/UserContext'\nimport SlideAnimation from \"../../partials/SlideAnimation\";\nimport { getSize } from \"../../../scripts/responsiveFacilities\";\nimport CloseOnOuterClick from \"../../partials/CloseOnOuterClick\";\nimport fetchApi from \"../../../scripts/fetchApi\";\nimport ThemeSwitch from \"./ThemeSwitch\";\nimport EncryptionSettings from \"./EncryptionSettings\";\nimport PasswordSettings from './PasswordSettings'\n\nconst MenuWrapper = styled.div`\n    position: fixed;\n    left: 20px;\n    bottom:  20px;\n`\n\nconst MenuButton = styled.button`\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    border: none;\n    outline: none;\n    border-radius: 50%;\n    width: 50px;\n    aspect-ratio: 1/1;\n    margin-top: 15px;\n`\n\nconst MenuDiv = styled.div`\n    width: 300px;\n    border-radius: 20px;\n    font-weight: 300;\n    text-align: center;\n    overflow: hidden;\n\n    @media screen and (max-width: 1000px) {\n        width: 90vw;\n    }\n\n    h3 {\n        font-size: calc(1.4 * ${getSize()})\n    }\n\n    p {\n        font-size: ${getSize()};\n        font-weight: 500;\n    }\n\n    background-color: ${({ theme }) => theme.uiColor};\n    color: ${({ theme }) => theme.fontColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst Button = styled.button`\n    width: 100%;\n    aspect-ratio: 20/3;\n    font-size: ${getSize()};\n    outline: none;\n    border: none;\n    color: #fafafa;    \n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin-block: 15px;\n    font-weight: 500;\n\n    background-color: ${({ color }) => color};\n    box-shadow: ${({ theme }) => theme.shadow};\n`\n\nconst User = styled.div`\n    width: 100%;\n    box-shadow: ${({ theme }) => theme.shadow};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 8px;\n\n    p {\n        font-size: 23px !important;\n        font-weight: 300;\n    }\n`\n\nconst Menu = () => {\n    const { theme } = useContext(ThemeContext)\n    const { setUser, user } = useContext(UserContext)\n    const [showMenu, setShowMenu] = useState(false);\n\n    const logout = async () => {\n        const res = await fetchApi('/logout')\n\n        if (res.ok) setUser(null)\n        else console.error(res.error)\n    }\n\n    return (\n        <MenuWrapper>\n\n            <SlideAnimation isVisible={showMenu} start={{ y: 200 }} end={{ y: 0 }}>\n                <CloseOnOuterClick setSomething={setShowMenu}>\n                    <MenuDiv theme={theme}>\n\n                        <User theme={theme}>\n                            <p>{user.username}</p>\n                        </User>\n\n                        <div style={{ padding: '10px 20px' }}>\n\n\n                            <ThemeSwitch />\n\n                            <PasswordSettings />\n                            <EncryptionSettings />\n\n                            <Button onClick={() => logout()} color='#f44336' theme={theme} className='clickable'>\n                                Logout\n                            </Button>\n                        </div>\n\n                    </MenuDiv>\n                </CloseOnOuterClick>\n            </SlideAnimation>\n\n            <MenuButton theme={theme} onClick={() => setShowMenu(!showMenu)} className='clickable'>\n                <IconGridDots color={theme.fontColor} size='30px' />\n            </MenuButton>\n\n        </MenuWrapper>\n    );\n}\n\nexport default Menu;","import { useContext, useState } from 'react'\n\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport InputField from '../partials/InputField';\nimport styled from 'styled-components';\nimport fetchApi from '../../scripts/fetchApi';\nimport { isFormUnfilled, setError } from '../../scripts/InputErrorHandler';\n\nconst PinFormDiv = styled.div`\n    z-index: 10;\n    border-radius: 10px;\n    margin-inline: auto;\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n    color: ${({ theme }) => theme.fontColor};\n    transition: 0.1s;\n    overflow: hidden;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    width: 400px;\n    padding: 20px 40px;\n    text-align: center;\n\n    @media screen and (max-width: 700px) {\n        width: 95vw;\n    }\n\n    h2 {\n        font-weight: 300;\n    }\n`\n\nconst Button = styled.button`\n    width: 70%;\n    aspect-ratio: 20/3;\n    background-color: #03a9f4;\n    color: #fafafa;\n    box-shadow: ${({ theme }) => theme.shadow};\n    outline: none;\n    border:none;\n    margin-top: 30px;\n    padding-block: 10px;\n`\n\nconst PinForm = ({ setNotes, setSharedNotes, setShowPinForm }) => {\n    const { theme } = useContext(ThemeContext)\n    const [pin, setPin] = useState('');\n\n    const getNotes = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ pin })) return\n\n        const res = await fetchApi('/notes', { pin })\n        if (res.ok) {\n            setNotes(res.content.userNotes)\n            setSharedNotes(res.content.sharedNotes)\n            setShowPinForm(false)\n        } else setError('pin', res.error)\n\n    }\n\n    return (\n        <PinFormDiv theme={theme}>\n            <h2>Enter your PIN</h2>\n            <form onSubmit={e => getNotes(e)}>\n\n                <InputField name='pin' type='password' content={pin} setContent={setPin} autoFocus={true} />\n\n                <Button className='clickable'> Decrypt data </Button>\n            </form>\n        </PinFormDiv>\n    );\n}\n\nexport default PinForm","import { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { IconPlus } from '@tabler/icons';\n\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport fetchApi from '../../scripts/fetchApi';\nimport Note from './Note'\nimport FocusedNote from './FocusedNote'\nimport Menu from './Menu/';\nimport PinForm from './PinForm'\n\nimport { getColumns } from '../../scripts/responsiveFacilities';\nimport Alert from '../partials/Alert';\n\nconst NoteGalleryDiv = styled.div`\n    padding: 0 10px;\n    transition: 0.2s;\n    color: ${({ theme }) => theme.fontColor}\n`\n\nconst Notes = styled.div`\n    display: grid;\n    grid-template-columns: ${getColumns()};\n    gap: 20px;\n    padding-top: 15px;\n\n    p {\n        font-size: 20px;\n    }\n`\nconst SectionHeader = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    text-align: left;\n    border-bottom: 2px solid ${({ theme }) => theme.fontColor};\n    opacity: 0.7;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    p {\n    font-weight: 500;\n    font-size: 25px;\n    }\n`\n\nconst NoteGallery = () => {\n    const { theme } = useContext(ThemeContext)\n    const { user } = useContext(UserContext)\n    const [noteToFocus, setNoteToFocus] = useState(null);\n\n    const range = new Array(8).fill('loading')\n    const [notes, setNotes] = useState(range);\n    const [sharedNotes, setSharedNotes] = useState([]);\n\n    const [showPinForm, setShowPinForm] = useState(user.encryption);\n    const [alertContent, setAlertContent] = useState('');\n\n    useEffect(() => {\n        if (user.encryption) return\n\n        (async () => {\n            const res = await fetchApi('/notes', {})\n            if (res.ok) setNotes(res.content.userNotes)\n            else setAlertContent(res.error)\n        })()\n\n    }, [])\n\n\n    return (\n        <>\n            {showPinForm && <PinForm setNotes={setNotes} setSharedNotes={setSharedNotes} setShowPinForm={setShowPinForm} />}\n            {noteToFocus && <FocusedNote setShowPinForm={setShowPinForm} setNoteToFocus={setNoteToFocus} note={noteToFocus} setNotes={setNotes} setSharedNotes={setSharedNotes} />}\n            <Alert content={alertContent} setContent={setAlertContent} />\n\n            <NoteGalleryDiv theme={theme} style={{ filter: `${(showPinForm || noteToFocus) ? 'blur(5px)' : ''}` }}>\n\n                <SectionHeader theme={theme}>\n                    <p>Your notes</p>\n                    <IconPlus size='30px' onClick={() => setNoteToFocus('new')} className=\"clickable\" />\n                </SectionHeader>\n\n                <Notes>\n                    {notes.length !== 0\n                        ? <>\n                            {notes.map(note => (\n                                <Note\n                                    setNoteToFocus={setNoteToFocus}\n                                    key={note._id || Math.random()}\n                                    data={note}\n                                />\n                            ))}\n                        </>\n                        : <p>Add your first note!</p>\n                    }\n                </Notes>\n\n                {sharedNotes.length !== 0 &&\n                    <>\n                        <SectionHeader theme={theme}>\n                            <p>Shared notes</p>\n                        </SectionHeader>\n                        <Notes>\n                            {sharedNotes.map(note => (\n                                <Note\n                                    setNoteToFocus={setNoteToFocus}\n                                    key={note._id || Math.random()}\n                                    data={note}\n                                />\n                            ))}\n                        </Notes>\n                    </>\n                }\n\n            </NoteGalleryDiv>\n\n            <Menu />\n        </>\n    )\n}\n\nexport default NoteGallery;","import { useContext, useState } from 'react'\nimport styled from 'styled-components';\n\nimport fetchApi from '../../scripts/fetchApi'\nimport SlideAnimation from '../partials/SlideAnimation';\nimport InputField from '../partials/InputField';\nimport { UserContext } from '../../contexts/UserContext';\nimport { setError, setValid, isFormUnfilled } from '../../scripts/InputErrorHandler'\n\n\n\nconst Form = styled.form`\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        padding: 0 30px;\n\n        p {\n            margin-top: 5px;\n        }\n`\n\nconst Button = styled.button`\n        background-color: #2196f3;\n        color: #fafafa;\n        margin-top: 15px;\n        outline: none;\n        border: none;\n        padding: 10px 30px;\n        font-size: 1em;\n        border-radius: 5px;\n`\n\nexport const LoginForm = ({ action }) => {\n    const { setUser } = useContext(UserContext)\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ login, password })) return\n\n        const user = { login, password }\n        const res = await fetchApi('/login', user)\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: -300 }} end={{ x: 0 }} isVisible={action === 'login'}>\n                <InputField name='login' text='Login' content={login} setContent={setLogin} />\n                <InputField name='password' text='Password' type='password' content={password} setContent={setPassword} />\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    );\n}\n\nexport const SignUpForm = ({ action }) => {\n    const { setUser } = useContext(UserContext)\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        if (isFormUnfilled({ username, password, repeatPassword })) return\n\n        if (password !== repeatPassword) {\n            setError('password', 'Password and second password must be the same')\n            setError('repeatPassword', 'Password and second password must be the same')\n            return\n        }\n        else {\n            setValid('password')\n            setValid('repeatPassword')\n        }\n\n        const user = { username, password }\n        const res = await fetchApi('/signup', user)\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: 300 }} end={{ x: 0 }} isVisible={action === 'signup'}>\n                <InputField\n                    name='username'\n                    text='Username'\n                    content={username}\n                    setContent={setUsername}\n                />\n                <InputField\n                    name='password'\n                    text='Password'\n                    type='password'\n                    content={password}\n                    setContent={setPassword}\n                />\n                <InputField\n                    name='repeatPassword'\n                    text='Repeat password'\n                    type='password'\n                    content={repeatPassword}\n                    setContent={setRepeatPassword}\n                />\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    );\n}\n\nexport const TryForm = ({ action }) => {\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const { setUser } = useContext(UserContext)\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const res = await fetchApi('/signup', { password })\n\n        if (res.ok) setUser(res.content)\n        else setError('res', res.error)\n    }\n\n    return (\n        <Form onSubmit={e => handleSubmit(e)}>\n            <SlideAnimation start={{ x: 300 }} end={{ x: 0 }} isVisible={action === 'try'}>\n\n                <p>\n                    Use app without entering any personal data.\n                </p>\n\n                <InputField\n                    name='password'\n                    text='Password'\n                    type='password'\n                    content={password}\n                    setContent={setPassword}\n                />\n                <InputField\n                    name='repeatPassword'\n                    text='Repeat password'\n                    type='password'\n                    content={repeatPassword}\n                    setContent={setRepeatPassword}\n                />\n\n                <Button className='clickable'>Confirm</Button>\n                <div className=\"error res hide\"></div>\n            </SlideAnimation>\n        </Form>\n    )\n}\n","import { useContext, useState } from 'react'\nimport styled from 'styled-components';\n\nimport { LoginForm, SignUpForm, TryForm } from './Forms'\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nconst AuthPageDiv = styled.div`\n    transform: translateX(-50%) translateY(-50%);\n    padding: 20px 10px;\n    font-size: 18px;\n    border-radius: 10px;\n    transition: 0.3s;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 400px;\n\n    @media screen and (max-width: 700px) {\n        width: 95vw;\n    }\n    \n    color: ${({ theme }) => theme.fontColor};\n    background-color: ${({ theme }) => theme.uiColor};\n    box-shadow: ${({ theme }) => theme.shadow};\n\n    h2 {\n        font-size: 2rem;\n    }\n`\n\nconst ActionSwitch = styled.div`\n    width: 70%;\n    height: 40px;\n    border-radius: 1000px;\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: space-around;\n    box-shadow: ${({ theme }) => theme.shadow};\n    margin-top: 10px;\n    overflow: hidden;\n\n    p {\n        flex-grow: 1;\n        display: grid;\n        place-items: center;\n        transition: 0.3s;\n\n        &:not(.active) {\n            border: 2px solid ${({ theme }) => theme.uiColor};\n        }\n    }\n\n    .active {\n        color: #fafafa;\n        background-color:#2196f3;\n    }\n`\n\nconst Main = () => {\n    const { theme } = useContext(ThemeContext)\n\n    const [action, setAction] = useState('login');\n\n    return (\n        <>\n            <AuthPageDiv theme={theme}>\n\n                <ActionSwitch theme={theme}>\n                    <p onClick={() => setAction('login')} className={`clickable ${action === 'login' ? 'active' : ''}`}>\n                        Login\n                    </p>\n                    <p onClick={() => setAction('signup')} className={`clickable ${action === 'signup' ? 'active' : ''}`}>\n                        Sign Up\n                    </p>\n                    <p onClick={() => setAction('try')} className={`clickable ${action === 'try' ? 'active' : ''}`}>\n                        Try\n                    </p>\n                </ActionSwitch>\n\n                <LoginForm action={action} />\n                <SignUpForm action={action} />\n                <TryForm action={action} />\n\n            </AuthPageDiv>\n        </>\n    );\n}\n\nexport default Main;","import { useContext } from 'react';\nimport NoteGallery from './components/NoteGallery';\nimport AuthPage from './components/AuthPage';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport UserContextProvider, { UserContext } from './contexts/UserContext';\n\nconst App = () => {\n  return (\n    <ThemeContextProvider>\n      <UserContextProvider>\n\n        <ViewHandler />\n\n      </UserContextProvider>\n    </ThemeContextProvider>\n  );\n}\n\nconst ViewHandler = () => {\n  const { user } = useContext(UserContext)\n\n  return (\n    <>\n      {user\n        ? <NoteGallery />\n        : <AuthPage />\n      }\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}